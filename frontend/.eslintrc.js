module.exports = {
  env: {
    'jest': true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'airbnb',
    'airbnb-typescript',
    'plugin:react-hooks/recommended',
    'plugin:react-perf/all',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.json',
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: [
    'tsc',
    'react',
    'react-native',
    '@typescript-eslint',
    'jest',
    'react-perf',
  ],
  rules: {
    // 0 = off, 1 = warn, 2 = error
    'global-require': 'off',
    'react/jsx-filename-extension': [2, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
    'import/no-extraneous-dependencies': 'error',
    'import/extensions': 0,
    'react/function-component-definition': [2, { namedComponents: 'arrow-function' }],
    'no-underscore-dangle': 0,
    'no-nested-ternary': 0,
    'react/no-unstable-nested-components': [2, { allowAsProps: true }],
    'react/jsx-no-bind': 0,
    'class-methods-use-this': 0,
    'no-plusplus': 0,
    'react/static-property-placement': 0,
    'react/default-props-match-prop-types': 0,
    'react/no-unused-prop-types': 0,
    'react/require-default-props': 0,
    'react/jsx-props-no-spreading': 0,
    'react/no-array-index-key': 0,
    'no-param-reassign': 0,
    '@typescript-eslint/naming-convention': 0,
    'max-len': ['error', {
      code: 120,
      tabWidth: 4,
      ignoreComments: true,
      ignoreTrailingComments: true,
      ignoreUrls: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
      ignoreRegExpLiterals: true,
    }],
    'no-console': ['error', {
      allow: ['warn', 'error', 'info', 'debug'],
    }],
    'import/no-cycle': 'error',
    'react-native/no-unused-styles': 'error',
    'react-native/split-platform-components': 'error',
    'react-native/no-inline-styles': 'warn',
    'react-native/no-color-literals': 'warn',
    'react-native/no-raw-text': 'off',
    'react-native/no-single-element-style-arrays': 'error',

    'jest/no-disabled-tests': 'warn',
    'jest/no-focused-tests': 'error',
    'jest/no-identical-title': 'error',
    'jest/prefer-to-have-length': 'warn',
    'jest/valid-expect': 'error',

    // TODO: Прощаем некоторые грехи TS, а по хорошему надо исправить
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'warn',
    '@typescript-eslint/ban-types': 'warn',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-unnecessary-type-constraint': 'warn',
    '@typescript-eslint/no-this-alias': 'warn',
    '@typescript-eslint/no-var-requires': 'off',

    // TODO: Прощаем некоторые грехи оптимизации, а по хорошему надо исправить
    'react-perf/jsx-no-new-object-as-prop': 'off',
    'react-perf/jsx-no-new-array-as-prop': 'off',
    'react-perf/jsx-no-new-function-as-prop': 'off',
    'react-perf/jsx-no-jsx-as-prop': 'off',

    'react/prop-types': 'off',
    'max-classes-per-file': 0,
  },
};
